[{
  "_id": {
    "$oid": "687b0a949d02d8c3fee673f1"
  },
  "problemId": {
    "$oid": "687b0a949d02d8c3fee673ef"
  },
  "tags": [
    "string",
    "sliding window"
  ],
  "constraints": [
    "0 <= s.length <= 5 * 10^4",
    "s consists of English letters, digits, symbols and spaces."
  ],
  "examples": [
    {
      "input": "abcabcbb",
      "output": "3",
      "explanation": "The answer is \"abc\", with the length of 3.",
      "_id": {
        "$oid": "687b0a949d02d8c3fee673f2"
      }
    }
  ],
  "boilerplate": {
    "c": "int lengthOfLongestSubstring(char* s) {\n    // your code here\n}",
    "cpp": "int lengthOfLongestSubstring(string s) {\n    // your code here\n}",
    "python": "def lengthOfLongestSubstring(s):\n    # your code here\n    pass",
    "javascript": "function lengthOfLongestSubstring(s) {\n    // your code here\n}",
    "java": "public static int lengthOfLongestSubstring(String s) {\n    // your code here\n    return 0;\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    char s[50001];\n    scanf(\"%s\", s);\n    printf(\"%d\\n\", lengthOfLongestSubstring(s));\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <string>\n#include <unordered_set>\nusing namespace std;\n// USER_CODE\nint main() {\n    string s;\n    cin >> s;\n    cout << lengthOfLongestSubstring(s) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        String s = sc.next();\n        System.out.println(lengthOfLongestSubstring(s));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e0",
  "createdAt": {
    "$date": "2025-07-19T03:01:40.520Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:40.520Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a949d02d8c3fee673fb"
  },
  "problemId": {
    "$oid": "687b0a949d02d8c3fee673f9"
  },
  "tags": [
    "array",
    "two pointers"
  ],
  "constraints": [
    "n >= 2",
    "0 <= height[i] <= 3 * 10^4"
  ],
  "examples": [
    {
      "input": "[1,8,6,2,5,4,8,3,7]",
      "output": "49",
      "explanation": "The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. The max area of water the container can contain is 49.",
      "_id": {
        "$oid": "687b0a949d02d8c3fee673fc"
      }
    }
  ],
  "boilerplate": {
    "c": "int maxArea(int* height, int heightSize) {\n    // your code here\n}",
    "cpp": "int maxArea(vector<int>& height) {\n    // your code here\n}",
    "python": "def maxArea(height):\n    # your code here\n    pass",
    "javascript": "function maxArea(height) {\n    // your code here\n}",
    "java": "public static int maxArea(int[] height) {\n    // your code here\n    return 0;\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int* height = (int*)malloc(n * sizeof(int));\n    for (int i = 0; i < n; i++) scanf(\"%d\", &height[i]);\n    printf(\"%d\\n\", maxArea(height, n));\n    free(height);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <vector>\nusing namespace std;\n// USER_CODE\nint main() {\n    int n;\n    cin >> n;\n    vector<int> height(n);\n    for (int i = 0; i < n; i++) cin >> height[i];\n    cout << maxArea(height) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int n = sc.nextInt();\n        int[] height = new int[n];\n        for (int i = 0; i < n; i++) height[i] = sc.nextInt();\n        System.out.println(maxArea(height));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e8",
  "createdAt": {
    "$date": "2025-07-19T03:01:40.720Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:40.720Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a949d02d8c3fee67405"
  },
  "problemId": {
    "$oid": "687b0a949d02d8c3fee67403"
  },
  "tags": [
    "math",
    "string"
  ],
  "constraints": [
    "1 <= num <= 3999"
  ],
  "examples": [
    {
      "input": "3",
      "output": "III",
      "explanation": "3 is represented as 3 ones.",
      "_id": {
        "$oid": "687b0a949d02d8c3fee67406"
      }
    }
  ],
  "boilerplate": {
    "c": "char* intToRoman(int num) {\n    // your code here\n}",
    "cpp": "string intToRoman(int num) {\n    // your code here\n}",
    "python": "def intToRoman(num):\n    # your code here\n    pass",
    "javascript": "function intToRoman(num) {\n    // your code here\n}",
    "java": "public static String intToRoman(int num) {\n    // your code here\n    return \"\";\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    int num;\n    scanf(\"%d\", &num);\n    char* result = intToRoman(num);\n    printf(\"%s\\n\", result);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <string>\nusing namespace std;\n// USER_CODE\nint main() {\n    int num;\n    cin >> num;\n    cout << intToRoman(num) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int num = sc.nextInt();\n        System.out.println(intToRoman(num));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e9",
  "createdAt": {
    "$date": "2025-07-19T03:01:40.997Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:40.997Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a959d02d8c3fee67410"
  },
  "problemId": {
    "$oid": "687b0a959d02d8c3fee6740e"
  },
  "tags": [
    "math"
  ],
  "constraints": [
    "-2^31 <= x <= 2^31 - 1"
  ],
  "examples": [
    {
      "input": "123",
      "output": "321",
      "explanation": "The reverse of 123 is 321.",
      "_id": {
        "$oid": "687b0a959d02d8c3fee67411"
      }
    }
  ],
  "boilerplate": {
    "c": "int reverse(int x) {\n    // your code here\n}",
    "cpp": "int reverse(int x) {\n    // your code here\n}",
    "python": "def reverse(x):\n    # your code here\n    pass",
    "javascript": "function reverse(x) {\n    // your code here\n}",
    "java": "public static int reverse(int x) {\n    // your code here\n    return 0;\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n// USER_CODE\nint main() {\n    int x;\n    scanf(\"%d\", &x);\n    printf(\"%d\\n\", reverse(x));\n    return 0;\n}",
    "cpp": "#include <iostream>\nusing namespace std;\n// USER_CODE\nint main() {\n    int x;\n    cin >> x;\n    cout << reverse(x) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int x = sc.nextInt();\n        System.out.println(reverse(x));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e4",
  "createdAt": {
    "$date": "2025-07-19T03:01:41.173Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:41.173Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a959d02d8c3fee6741b"
  },
  "problemId": {
    "$oid": "687b0a959d02d8c3fee67419"
  },
  "tags": [
    "math"
  ],
  "constraints": [
    "-2^31 <= x <= 2^31 - 1"
  ],
  "examples": [
    {
      "input": "121",
      "output": "true",
      "explanation": "121 reads as 121 from left to right and from right to left.",
      "_id": {
        "$oid": "687b0a959d02d8c3fee6741c"
      }
    }
  ],
  "boilerplate": {
    "c": "bool isPalindrome(int x) {\n    // your code here\n}",
    "cpp": "bool isPalindrome(int x) {\n    // your code here\n}",
    "python": "def isPalindrome(x):\n    # your code here\n    pass",
    "javascript": "function isPalindrome(x) {\n    // your code here\n}",
    "java": "public static boolean isPalindrome(int x) {\n    // your code here\n    return false;\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <stdbool.h>\n// USER_CODE\nint main() {\n    int x;\n    scanf(\"%d\", &x);\n    printf(\"%s\\n\", isPalindrome(x) ? \"true\" : \"false\");\n    return 0;\n}",
    "cpp": "#include <iostream>\nusing namespace std;\n// USER_CODE\nint main() {\n    int x;\n    cin >> x;\n    cout << (isPalindrome(x) ? \"true\" : \"false\") << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int x = sc.nextInt();\n        System.out.println(isPalindrome(x));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e6",
  "createdAt": {
    "$date": "2025-07-19T03:01:41.368Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:41.368Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a959d02d8c3fee67426"
  },
  "problemId": {
    "$oid": "687b0a959d02d8c3fee67424"
  },
  "tags": [
    "array",
    "subsequence"
  ],
  "constraints": [
    "1 <= nums.length <= 2 * 10^5",
    "1 <= nums[i] <= 2"
  ],
  "examples": [
    {
      "input": "[1,2,3,4]",
      "output": "4",
      "explanation": "The entire array forms a valid subsequence.",
      "_id": {
        "$oid": "687b0a959d02d8c3fee67427"
      }
    }
  ],
  "boilerplate": {
    "c": "int maximumLength(int* nums, int numsSize) {\n    // your code here\n}",
    "cpp": "int maximumLength(vector<int>& nums) {\n    // your code here\n}",
    "python": "def maximumLength(nums):\n    # your code here\n    pass",
    "javascript": "function maximumLength(nums) {\n    // your code here\n}",
    "java": "public static int maximumLength(int[] nums) {\n    // your code here\n    return 0;\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int* nums = (int*)malloc(n * sizeof(int));\n    for (int i = 0; i < n; i++) scanf(\"%d\", &nums[i]);\n    printf(\"%d\\n\", maximumLength(nums, n));\n    free(nums);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <vector>\nusing namespace std;\n// USER_CODE\nint main() {\n    int n;\n    cin >> n;\n    vector<int> nums(n);\n    for (int i = 0; i < n; i++) cin >> nums[i];\n    cout << maximumLength(nums) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nums = new int[n];\n        for (int i = 0; i < n; i++) nums[i] = sc.nextInt();\n        System.out.println(maximumLength(nums));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181dd",
  "createdAt": {
    "$date": "2025-07-19T03:01:41.607Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:41.607Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a959d02d8c3fee67430"
  },
  "problemId": {
    "$oid": "687b0a959d02d8c3fee6742e"
  },
  "tags": [
    "array",
    "hashmap"
  ],
  "constraints": [
    "2 <= nums.length <= 10^4",
    "-10^9 <= nums[i] <= 10^9",
    "-10^9 <= target <= 10^9",
    "Only one valid answer exists."
  ],
  "examples": [
    {
      "input": "[2,7,11,15]\n9",
      "output": "[0,1]",
      "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1].",
      "_id": {
        "$oid": "687b0a959d02d8c3fee67431"
      }
    }
  ],
  "boilerplate": {
    "c": "int* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    // your code here\n}",
    "cpp": "vector<int> twoSum(vector<int>& nums, int target) {\n    // your code here\n}",
    "python": "def twoSum(nums, target):\n    # your code here\n    pass",
    "javascript": "function twoSum(nums, target) {\n    // your code here\n}",
    "java": "public static int[] twoSum(int[] nums, int target) {\n    // your code here\n    return new int[0];\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    int n, target;\n    scanf(\"%d\", &n);\n    int* nums = (int*)malloc(n * sizeof(int));\n    for (int i = 0; i < n; i++) scanf(\"%d\", &nums[i]);\n    scanf(\"%d\", &target);\n    int returnSize;\n    int* result = twoSum(nums, n, target, &returnSize);\n    printf(\"[%d,%d]\\n\", result[0], result[1]);\n    free(nums);\n    free(result);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <vector>\nusing namespace std;\n// USER_CODE\nint main() {\n    int n, target;\n    cin >> n;\n    vector<int> nums(n);\n    for (int i = 0; i < n; i++) cin >> nums[i];\n    cin >> target;\n    vector<int> result = twoSum(nums, target);\n    cout << \"[\" << result[0] << \",\" << result[1] << \"]\" << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nums = new int[n];\n        for (int i = 0; i < n; i++) nums[i] = sc.nextInt();\n        int target = sc.nextInt();\n        int[] result = twoSum(nums, target);\n        System.out.print(\"[\");\n        for (int i = 0; i < result.length; i++) {\n            System.out.print(result[i]);\n            if (i < result.length - 1) System.out.print(\",\");\n        }\n        System.out.println(\"]\");\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181de",
  "createdAt": {
    "$date": "2025-07-19T03:01:41.931Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:41.931Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a969d02d8c3fee6743b"
  },
  "problemId": {
    "$oid": "687b0a969d02d8c3fee67439"
  },
  "tags": [
    "string",
    "dynamic programming"
  ],
  "constraints": [
    "1 <= s.length <= 1000",
    "s consist of only digits and English letters."
  ],
  "examples": [
    {
      "input": "babad",
      "output": "bab",
      "explanation": "\"aba\" is also a valid answer.",
      "_id": {
        "$oid": "687b0a969d02d8c3fee6743c"
      }
    }
  ],
  "boilerplate": {
    "c": "char* longestPalindrome(char* s) {\n    // your code here\n}",
    "cpp": "string longestPalindrome(string s) {\n    // your code here\n}",
    "python": "def longestPalindrome(s):\n    # your code here\n    pass",
    "javascript": "function longestPalindrome(s) {\n    // your code here\n}",
    "java": "public static String longestPalindrome(String s) {\n    // your code here\n    return \"\";\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    char s[1001];\n    scanf(\"%s\", s);\n    char* result = longestPalindrome(s);\n    printf(\"%s\\n\", result);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <string>\nusing namespace std;\n// USER_CODE\nint main() {\n    string s;\n    cin >> s;\n    cout << longestPalindrome(s) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        String s = sc.next();\n        System.out.println(longestPalindrome(s));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e2",
  "createdAt": {
    "$date": "2025-07-19T03:01:42.214Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:42.214Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a969d02d8c3fee67445"
  },
  "problemId": {
    "$oid": "687b0a969d02d8c3fee67443"
  },
  "tags": [
    "string",
    "simulation"
  ],
  "constraints": [
    "1 <= s.length <= 1000",
    "s consists of English letters (lower-case and upper-case), ',' and '.'.",
    "1 <= numRows <= 1000"
  ],
  "examples": [
    {
      "input": "PAYPALISHIRING\n3",
      "output": "PAHNAPLSIIGYIR",
      "explanation": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on 3 rows.",
      "_id": {
        "$oid": "687b0a969d02d8c3fee67446"
      }
    }
  ],
  "boilerplate": {
    "c": "char* convert(char* s, int numRows) {\n    // your code here\n}",
    "cpp": "string convert(string s, int numRows) {\n    // your code here\n}",
    "python": "def convert(s, numRows):\n    # your code here\n    pass",
    "javascript": "function convert(s, numRows) {\n    // your code here\n}",
    "java": "public static String convert(String s, int numRows) {\n    // your code here\n    return \"\";\n}"
  },
  "harness": {
    "c": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n// USER_CODE\nint main() {\n    char s[1001];\n    int numRows;\n    scanf(\"%s\", s);\n    scanf(\"%d\", &numRows);\n    char* result = convert(s, numRows);\n    printf(\"%s\\n\", result);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <string>\nusing namespace std;\n// USER_CODE\nint main() {\n    string s;\n    int numRows;\n    cin >> s >> numRows;\n    cout << convert(s, numRows) << endl;\n    return 0;\n}",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        String s = sc.next();\n        int numRows = sc.nextInt();\n        System.out.println(convert(s, numRows));\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181e3",
  "createdAt": {
    "$date": "2025-07-19T03:01:42.507Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:42.507Z"
  },
  "__v": 0
},
{
  "_id": {
    "$oid": "687b0a969d02d8c3fee67450"
  },
  "problemId": {
    "$oid": "687b0a969d02d8c3fee6744e"
  },
  "tags": [
    "linked list",
    "math"
  ],
  "constraints": [
    "The number of nodes in each linked list is in the range [1, 100].",
    "0 <= Node.val <= 9",
    "It is guaranteed that the list represents a number that does not have leading zeros."
  ],
  "examples": [
    {
      "input": "2 4 3\n5 6 4",
      "output": "7 0 8",
      "explanation": "342 + 465 = 807",
      "_id": {
        "$oid": "687b0a969d02d8c3fee67451"
      }
    }
  ],
  "boilerplate": {
    "cpp": "ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n    // your code here\n}",
    "python": "def addTwoNumbers(l1, l2):\n    # your code here\n    pass",
    "javascript": "function addTwoNumbers(l1, l2) {\n    // your code here\n}",
    "java": "public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n    // your code here\n    return null;\n}"
  },
  "harness": {
    "c": "// USER_CODE\nint main() {\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <sstream>\n#include <string>\nusing namespace std;\nstruct ListNode { int val; ListNode* next; ListNode(int x) : val(x), next(nullptr) {} };\n// USER_CODE\nListNode* buildList() {\n    std::string line;\n    if (!std::getline(std::cin, line)) return nullptr;\n    std::istringstream iss(line);\n    int x;\n    ListNode dummy(0), *cur = &dummy;\n    while (iss >> x) cur = cur->next = new ListNode(x);\n    return dummy.next;\n}\nvoid printList(ListNode* head) { while (head) { cout << head->val; if (head->next) cout << \" \"; head = head->next; } cout << endl; }\nint main() {\n    ListNode* l1 = buildList();\n    ListNode* l2 = buildList();\n    ListNode* res = addTwoNumbers(l1, l2);\n    printList(res);\n    return 0;\n}\n",
    "python": "# USER_CODE\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()",
    "javascript": "// USER_CODE\nfunction main() {\n    // test code\n}\nmain();",
    "java": "public class Main {\n    // USER_CODE\n    public static void main(String[] args) {\n        java.util.Scanner sc = new java.util.Scanner(System.in);\n        String line1 = sc.nextLine();\n        String line2 = sc.nextLine();\n        ListNode l1 = buildList(line1);\n        ListNode l2 = buildList(line2);\n        ListNode res = addTwoNumbers(l1, l2);\n        printList(res);\n    }\n    static ListNode buildList(String line) {\n        String[] parts = line.trim().split(\" \" );\n        ListNode dummy = new ListNode(0), cur = dummy;\n        for (String p : parts) {\n            if (!p.isEmpty()) {\n                cur.next = new ListNode(Integer.parseInt(p));\n                cur = cur.next;\n            }\n        }\n        return dummy.next;\n    }\n    static void printList(ListNode head) {\n        while (head != null) {\n            System.out.print(head.val);\n            if (head.next != null) System.out.print(\" \" );\n            head = head.next;\n        }\n        System.out.println();\n    }\n    static class ListNode {\n        int val;\n        ListNode next;\n        ListNode(int x) { val = x; }\n    }\n}"
  },
  "originalId": "6877ce90652ecbda450181df",
  "createdAt": {
    "$date": "2025-07-19T03:01:42.719Z"
  },
  "updatedAt": {
    "$date": "2025-07-19T03:01:42.719Z"
  },
  "__v": 0
}]